// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FridgeProduct.Entities.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20211220093129_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.Fridge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FridgeId");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Fridges");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7b104622-4fef-465a-a5d4-2015de2c7090"),
                            ModelId = new Guid("745cff18-3dfe-4c44-8eb9-5bd6c3e8f328"),
                            Name = "Holod",
                            OwnerName = "Aleks",
                            ProductId = 1
                        },
                        new
                        {
                            Id = new Guid("5df63d42-598e-4b30-8493-8fd0c6cdaf18"),
                            ModelId = new Guid("41914da1-1deb-47d2-bf06-92e71952b7d4"),
                            Name = "Moroz",
                            OwnerName = "Viktor",
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("Entities.Models.FridgeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ModelId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FridgeModels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("65afe2b1-27ac-4657-865c-065d10505bef"),
                            Name = "NewModelOne",
                            Year = 2019
                        },
                        new
                        {
                            Id = new Guid("ce82a987-8381-43c1-9dae-c1181da0510f"),
                            Name = "NewModelTwo",
                            Year = 2019
                        });
                });

            modelBuilder.Entity("Entities.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<int>("DefaultQuantity")
                        .HasColumnType("int");

                    b.Property<int>("FridgeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProductName");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("962be0f6-a4a3-4e17-bf3e-1ea1b7e029d3"),
                            DefaultQuantity = 1,
                            FridgeId = 1,
                            Name = "Eggs"
                        },
                        new
                        {
                            Id = new Guid("14ad7a49-95f6-4e96-9c29-c3080ec493d0"),
                            DefaultQuantity = 1,
                            FridgeId = 2,
                            Name = "Bacon"
                        });
                });

            modelBuilder.Entity("FridgeProduct", b =>
                {
                    b.Property<Guid>("FridgesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FridgesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("FridgeProduct");
                });

            modelBuilder.Entity("FridgeProduct", b =>
                {
                    b.HasOne("Entities.Models.Fridge", null)
                        .WithMany()
                        .HasForeignKey("FridgesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
